
# Application configuration settings. These are read during boot time and can be overriden in JVM cmd args.
application {

  # Wi-Fi sniffer configuration
  sniffer {
    fieldSeparator = "|"

    # WiFi interface to listen on ??? more docs here!!! TODO: who sets the monitor mode - depends, can be tshark
    #interface = "wlan0"
    interface = "wlp3s0"

    # A command line that will be executed to get packets printed to stdout which will be piped to this app
    cmd = ["stdbuf", "-oL", "/usr/sbin/tshark", "-i"${application.sniffer.interface}, "-I", "-fbroadcast",
      "-Tfields", "-Eseparator="${application.sniffer.fieldSeparator}, "-eframe.time_epoch",
      //"-Y'wlan.fc.type == 0 && wlan.fc.subtype == 4'",
      "-ewlan.sa", "-eradiotap.dbm_antsignal"]
  }

  # All configuration settings related to metrics.
  metrics {

    # Don't report every event, but rather aggregate them together each N seconds and report only one per each period
    # if any.
    eventAggregateInterval = 60 seconds
  }

  consumers {

    # currently available implementations are:
    # * "com.wp.service.consumer.StdOutEventConsumer"
    # * "com.wp.service.consumer.RESTEventConsumer"
    # * "com.wp.service.consumer.GPIOEventConsumer"
    # * "com.wp.service.consumer.MqttConsumer"
    implementers = ["com.wp.service.consumer.MqttConsumer",
      //"com.wp.service.consumer.GPIOEventConsumer",
      "com.wp.service.consumer.StdOutEventConsumer"]

    restConsumer {
      # RESTful service URL that will accept post requests in JSON format.
      submitUrl = "http://localhost:8090/wp/client/events"
    }

    mqttConsumer {
      # a broker that will receive messages and optionally forward to subscribers if any.
      # Use "tcp://test.mosquitto.org:1883" for testing with publicly available server.
      brokerUrl = "tcp://localhost:1883"

      # empty string ("") values for userName or password will be interpreted as null, i.e. no authentication required.
      userName = ""
      password = ""

      stashTimeToLive = 1 minute
      stashCapacity = 8000
      reconnectDelayMin = 10 ms
      reconnectDelayMax = 30 seconds
    }
  }
}
